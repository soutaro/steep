module Steep
  class Project
    class Target
      attr_reader name: Symbol

      attr_reader target_options: Options?

      attr_reader source_pattern: Pattern

      attr_reader signature_pattern: Pattern

      attr_reader code_diagnostics_config: untyped

      attr_reader project: Project

      attr_reader unreferenced: bool

      attr_reader groups: Array[Group]

      def initialize: (name: Symbol, options: Options?, source_pattern: Pattern, signature_pattern: Pattern, code_diagnostics_config: untyped, project: Project, unreferenced: bool) -> void

      # The options that applies to this target
      #
      # Might be the options given to the target or the project.
      #
      def options: () -> Options

      def possible_source_file?: (Pathname path) -> (Group | Target | nil)

      def possible_signature_file?: (Pathname path) -> (Group | Target | nil)

      def new_env_loader: () -> RBS::EnvironmentLoader

      def self.construct_env_loader: (options: Options, project: Project) -> RBS::EnvironmentLoader
    end
  end
end
