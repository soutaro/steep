module Steep
  module Drivers
    class Check
      module LSP = LanguageServer::Protocol

      attr_reader stdout: IO

      attr_reader stderr: IO

      attr_reader command_line_patterns: Array[String]

      attr_accessor with_expectations_path: Pathname?

      attr_accessor save_expectations_path: Pathname?

      attr_accessor severity_level: Diagnostic::LSPFormatter::severity

      attr_reader jobs_option: Utils::JobsOption

      attr_reader targets: Array[Symbol]

      include Utils::DriverHelper

      def initialize: (stdout: IO, stderr: IO) -> void

      def run: () -> Integer

      def print_expectations: (project: Project, all_files: Array[Pathname], expectations_path: Pathname, notifications: Array[untyped]) -> Integer

      def save_expectations: (project: Project, all_files: Array[Pathname], expectations_path: Pathname, notifications: Array[untyped]) -> Integer

      def print_result: (project: Project, notifications: Array[untyped]) -> Integer

      # Returns true if the given target is active for this invocation
      def active_target?: (Project::Target) -> bool

      def load_files: (Services::FileLoader, Project::Target, Array[String] command_line_patterns, params: Server::CustomMethods::TypeCheck::params) -> void
    end
  end
end
