---
- file: annotation_syntax_error.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 2
      end:
        line: 1
        character: 25
    severity: ERROR
    message: 'Type annotation has a syntax error: Syntax error caused by token `pEOF`'
    code: Ruby::AnnotationSyntaxError
- file: argument_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 9
      end:
        line: 1
        character: 11
    severity: ERROR
    message: |-
      Cannot pass a value of type `::String` as an argument of type `::int`
        ::String <: ::int
          ::String <: (::Integer | ::_ToInt)
            ::String <: ::Integer
              ::Object <: ::Integer
                ::BasicObject <: ::Integer
    code: Ruby::ArgumentTypeMismatch
- file: block_body_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 30
      end:
        line: 1
        character: 36
    severity: ERROR
    message: |-
      Cannot allow block body have type `::String` because declared as type `::Integer`
        ::String <: ::Integer
          ::Object <: ::Integer
            ::BasicObject <: ::Integer
    code: Ruby::BlockBodyTypeMismatch
- file: block_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 3
        character: 8
      end:
        line: 3
        character: 12
    severity: ERROR
    message: |-
      Cannot pass a value of type `^(untyped, untyped, untyped) -> untyped` as a block-pass-argument of type `^(::Integer) -> void`
        ^(untyped, untyped, untyped) -> untyped <: ^(::Integer) -> void
          (Params are incompatible)
    code: Ruby::BlockTypeMismatch
- file: break_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 10
      end:
        line: 1
        character: 18
    severity: ERROR
    message: |-
      Cannot break with a value of type `::String` because type `::Integer` is assumed
        ::String <: ::Integer
          ::Object <: ::Integer
            ::BasicObject <: ::Integer
    code: Ruby::BreakTypeMismatch
- file: different_method_parameter_kind.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 34
    severity: ERROR
    message: 'Cannot find the declaration of class: `DifferentMethodParameterKind`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 3
        character: 10
      end:
        line: 3
        character: 15
    severity: ERROR
    message: The method parameter has different kind from the declaration `(::Integer,
      ::String) -> void`
    code: Ruby::DifferentMethodParameterKind
  - range:
      start:
        line: 3
        character: 17
      end:
        line: 3
        character: 19
    severity: ERROR
    message: The method parameter has different kind from the declaration `(::Integer,
      ::String) -> void`
    code: Ruby::DifferentMethodParameterKind
  - range:
      start:
        line: 7
        character: 10
      end:
        line: 7
        character: 21
    severity: ERROR
    message: 'The method parameter has different kind from the declaration `(name:
      ::String, size: ::Integer) -> void`'
    code: Ruby::DifferentMethodParameterKind
  - range:
      start:
        line: 7
        character: 23
      end:
        line: 7
        character: 29
    severity: ERROR
    message: 'The method parameter has different kind from the declaration `(name:
      ::String, size: ::Integer) -> void`'
    code: Ruby::DifferentMethodParameterKind
- file: incompatible_annotation.rb
  diagnostics:
  - range:
      start:
        line: 5
        character: 2
      end:
        line: 5
        character: 8
    severity: ERROR
    message: |-
      Type annotation about `a` is incompatible since ::String <: ::Array[::Integer] doesn't hold
        ::String <: ::Array[::Integer]
          ::Object <: ::Array[::Integer]
            ::BasicObject <: ::Array[::Integer]
    code: Ruby::IncompatibleAnnotation
- file: incompatible_argument.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 11
      end:
        line: 1
        character: 12
    severity: ERROR
    message: Unexpected positional argument
    code: Ruby::UnexpectedPositionalArgument
  - range:
      start:
        line: 1
        character: 13
      end:
        line: 1
        character: 14
    severity: ERROR
    message: Unexpected positional argument
    code: Ruby::UnexpectedPositionalArgument
- file: incompatible_assignment.rb
  diagnostics:
  - range:
      start:
        line: 2
        character: 0
      end:
        line: 2
        character: 5
    severity: ERROR
    message: |-
      Cannot assign a value of type `::Integer` to a variable of type `::String`
        ::Integer <: ::String
          ::Numeric <: ::String
            ::Object <: ::String
              ::BasicObject <: ::String
    code: Ruby::IncompatibleAssignment
  - range:
      start:
        line: 5
        character: 0
      end:
        line: 5
        character: 7
    severity: ERROR
    message: |-
      Cannot assign a value of type `::Integer` to a constant of type `::String`
        ::Integer <: ::String
          ::Numeric <: ::String
            ::Object <: ::String
              ::BasicObject <: ::String
    code: Ruby::IncompatibleAssignment
  - range:
      start:
        line: 8
        character: 0
      end:
        line: 8
        character: 9
    severity: ERROR
    message: |-
      Cannot assign a value of type `::Symbol` to a variable of type `::Integer`
        ::Symbol <: ::Integer
          ::Object <: ::Integer
            ::BasicObject <: ::Integer
    code: Ruby::IncompatibleAssignment
- file: method_arity_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 25
    severity: ERROR
    message: 'Cannot find the declaration of class: `MethodArityMismatch`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 3
        character: 9
      end:
        line: 3
        character: 11
    severity: ERROR
    message: 'Method parameters are incompatible with declaration `(name: ::String)
      -> void`'
    code: Ruby::MethodArityMismatch
  - range:
      start:
        line: 8
        character: 11
      end:
        line: 8
        character: 14
    severity: ERROR
    message: Method parameters are incompatible with declaration `(::String) -> void`
    code: Ruby::MethodArityMismatch
- file: method_body_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 28
    severity: ERROR
    message: 'Cannot find the declaration of class: `MethodBodyTypeMismatch`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 3
        character: 6
      end:
        line: 3
        character: 9
    severity: ERROR
    message: |-
      Cannot allow method body have type `::String` because declared as type `::Integer`
        ::String <: ::Integer
          ::Object <: ::Integer
            ::BasicObject <: ::Integer
    code: Ruby::MethodBodyTypeMismatch
- file: method_definition_missing.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 29
    severity: ERROR
    message: Cannot find implementation of method `::MethodDefinitionMissing#foo`
    code: Ruby::MethodDefinitionMissing
- file: method_parameter_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 29
    severity: ERROR
    message: 'Cannot find the declaration of class: `MethodParameterMismatch`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 3
        character: 10
      end:
        line: 3
        character: 11
    severity: ERROR
    message: The method parameter is incompatible with the declaration `(?::String,
      *::Integer) -> void`
    code: Ruby::MethodParameterMismatch
  - range:
      start:
        line: 3
        character: 13
      end:
        line: 3
        character: 14
    severity: ERROR
    message: The method parameter is incompatible with the declaration `(?::String,
      *::Integer) -> void`
    code: Ruby::MethodParameterMismatch
  - range:
      start:
        line: 7
        character: 15
      end:
        line: 7
        character: 20
    severity: ERROR
    message: 'The method parameter is incompatible with the declaration `(?name: ::String)
      -> void`'
    code: Ruby::MethodParameterMismatch
- file: method_return_type_annotation_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 40
    severity: ERROR
    message: 'Cannot find the declaration of class: `MethodReturnTypeAnnotationMismatch`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 3
        character: 2
      end:
        line: 6
        character: 5
    severity: ERROR
    message: |-
      Annotation `@type return` specifies type `::Integer` where declared as type `::String`
        ::Integer <: ::String
          ::Numeric <: ::String
            ::Object <: ::String
              ::BasicObject <: ::String
    code: Ruby::MethodReturnTypeAnnotationMismatch
- file: missing_keyword.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 19
      end:
        line: 1
        character: 32
    severity: ERROR
    message: 'More keyword arguments are required: foo'
    code: Ruby::InsufficientKeywordArguments
- file: no_method.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 2
      end:
        line: 1
        character: 5
    severity: ERROR
    message: Type `::Integer` does not have method `foo`
    code: Ruby::NoMethod
- file: proc_type_expected.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 4
      end:
        line: 1
        character: 10
    severity: ERROR
    message: Proc type is expected but `::Integer` is specified
    code: Ruby::ProcTypeExpected
- file: required_block_missing.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 4
      end:
        line: 1
        character: 7
    severity: ERROR
    message: The method cannot be called without a block
    code: Ruby::RequiredBlockMissing
- file: return_type_mismatch.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 24
    severity: ERROR
    message: 'Cannot find the declaration of class: `ReturnTypeMismatch`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 4
        character: 4
      end:
        line: 4
        character: 13
    severity: ERROR
    message: |-
      The method cannot return a value of type `::Integer` because declared as type `::String`
        ::Integer <: ::String
          ::Numeric <: ::String
            ::Object <: ::String
              ::BasicObject <: ::String
    code: Ruby::ReturnTypeMismatch
- file: unexpected_block_given.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 10
      end:
        line: 1
        character: 17
    severity: ERROR
    message: The method cannot be called with a block
    code: Ruby::UnexpectedBlockGiven
- file: unexpected_dynamic_method.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 29
    severity: ERROR
    message: "@dynamic annotation contains unknown method name `foo`"
    code: Ruby::UnexpectedDynamicMethod
- file: unexpected_jump.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 0
      end:
        line: 1
        character: 5
    severity: ERROR
    message: Cannot jump from here
    code: Ruby::UnexpectedJump
  - range:
      start:
        line: 3
        character: 0
      end:
        line: 3
        character: 4
    severity: ERROR
    message: Cannot jump from here
    code: Ruby::UnexpectedJump
- file: unexpected_jump_value.rb
  diagnostics:
  - range:
      start:
        line: 2
        character: 2
      end:
        line: 2
        character: 10
    severity: ERROR
    message: |-
      Cannot break with a value of type `::Integer` because type `nil` is assumed
        ::Integer <: nil
    code: Ruby::BreakTypeMismatch
- file: unexpected_keyword.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 36
      end:
        line: 1
        character: 39
    severity: ERROR
    message: Unexpected keyword argument
    code: Ruby::UnexpectedKeywordArgument
- file: unexpected_yield.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 6
      end:
        line: 1
        character: 21
    severity: ERROR
    message: 'Cannot find the declaration of class: `UnexpectedYield`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 4
        character: 4
      end:
        line: 4
        character: 9
    severity: ERROR
    message: Cannot detect the type of the expression
    code: Ruby::FallbackAny
  - range:
      start:
        line: 4
        character: 4
      end:
        line: 4
        character: 9
    severity: ERROR
    message: No block given for `yield`
    code: Ruby::UnexpectedYield
- file: unknown_constant_assigned.rb
  diagnostics:
  - range:
      start:
        line: 2
        character: 2
      end:
        line: 2
        character: 5
    severity: ERROR
    message: 'Cannot find the declaration of constant: `FOO`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 4
        character: 2
      end:
        line: 4
        character: 5
    severity: ERROR
    message: 'Cannot find the declaration of constant: `FOO`'
    code: Ruby::UnknownConstant
  - range:
      start:
        line: 6
        character: 4
      end:
        line: 6
        character: 7
    severity: ERROR
    message: 'Cannot find the declaration of constant: `FOO`'
    code: Ruby::UnknownConstant
- file: unresolved_overloading.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 0
      end:
        line: 1
        character: 6
    severity: ERROR
    message: |-
      Cannot find compatible overloading of method `+` of type `::Integer`
      Method types:
        def +: (::Integer) -> ::Integer
             | (::Float) -> ::Float
             | (::Rational) -> ::Rational
             | (::Complex) -> ::Complex
    code: Ruby::UnresolvedOverloading
- file: unsupported_syntax.rb
  diagnostics:
  - range:
      start:
        line: 1
        character: 0
      end:
        line: 2
        character: 3
    severity: ERROR
    message: sclass receiver must be instance type or singleton type, but type given
      `(::Integer | ::String | nil)`
    code: Ruby::UnsupportedSyntax
